var fs = require('fs');var util = require('util');var LineByLineReader = require('line-by-line');module.exports = function(){	var t = this;		t.getAllArtist = function(cb){		fs.readdir('data/', function(err, files){			if( files ){				for(var i in files){					files[i] = files[i].replace(/\.txt$/g, '');				}			}			cb(err, files);		});	}		t.getArtist = function(artist, cb){		fs.stat('data/'+artist+'.txt', function(err, stats){			if( err ){				cb(err);			}else{				var info = util.inspect(stats);				cb(null, info);			}		});	}		/**	artist.txt	---	[		{"name":"abc","artworks":[...],		{"name":"def",...		{"name":"ghi",...	]	...		@param artist name	@param chapter name, or null	@param callback function holding the fs.stats	*/	t.getChapter = function(artist, chapter, cb){		var chapters = [];		var lr = new LineByLineReader('data/'+artist+'.txt');		lr.on('error', function (err) {			// 'err' contains error object			cb(err);		});		lr.on('line', function (line) {			var _line = JSON.parse(line);			if( chapter ){				if( chapter == _line.name ){					chapters.push(_line);				}			}else{				chapters.push(_line);			}		});		lr.on('end', function () {			cb(null, chapters);		});	}		t.saveArtist = function(artist, cb){		t.getArtist(artist, function(err, info){			if( err ){				// cb(err);				fs.writeFile('data/'+artist+'.txt', '', function(err){					cb(err, 'Artist saved!');				});			}else{				cb(null, 'Artist already exists!');			}		});	}		/**	@param artist string	@param chapter array of {name:..., artworks:[...], ...}	*/	t.saveChapter = function(artist, chapter, cb){		t.getArtist(artist, function(err, info){			if( err ){				cb(err);			}else{				fs.appendFile('data/'+artist+'.txt', JSON.stringify(chapter)+'\r\n', function(err){					cb(err, 'Chapter saved!');				});			}		});	}		return t;}